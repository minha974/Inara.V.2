const mongoose = require('mongoose')
const stAssessmentSchema = new mongoose.Schema(
    {
        date:{type:Date,default:Date.now},
        updatedDate:{type:Date,default:Date.now},
        assessmentMasterId:{type:mongoose.Schema.Types.ObjectId,ref:'AssessmentMaster'},
        childStrength: { type: String },
        parentConcern: { type: String },
        babbling: { type: String },
        babblingRemarks: { type: String },
        firstWord: { type: String },
        firstWordRemarks: { type: String },
        twoWord: { type: String },
        twoWordRemarks: { type: String },
        regression: { type: String },
        regressionRemarks: { type: String },
        impressionSpeech: { type: String },
        neckControl: { type: String },
        neckControlRemarks: { type: String },
        sitting: { type: String },
        sittingRemarks: { type: String },
        walking: { type: String },
        walkingRemarks: { type: String },
        impressionMotor: { type: String },
        structureLip: { type: String },
        functionLip: { type: String },
        structureTounge: { type: String },
        functionTounge: { type: String },
        structureTeeth: { type: String },
        functionTeeth: { type: String },
        structureAlveolus: { type: String },
        functionAlveolus: { type: String },
        structurePalete: { type: String },
        functionPalete: { type: String },
        structureUvula: { type: String },
        functionUvula: { type: String },
        structureMandible: { type: String },
        functionMandible: { type: String },
        sucking: { type: String },
        swallowing: { type: String },
        bitting: { type: String },
        chewing: { type: String },
        blowing: { type: String },
        drooling: { type: String },
        otherConsultation: { type: String },
        eyeContact: { type: String },
        attentionConcentration: { type: String },
        sittingTolerance: { type: String },
        speechSkills: { type: String },
        fluencyProfile: { type: String },
        speechRate: { type: String },
        effort: { type: String },
        prosody: { type: String },
        speechRating: { type: String },
        stimulability: { type: String },
        phonologyProfile: { type: String },
        pitch: { type: String },
        loudness: { type: String },
        quality: { type: String },resonance: { type: String },
        languageProfile: { type: String },
        comprehension: { type: String },
        receptionMode: { type: String },
        expression: { type: String },
        expressionMode: { type: String },
        parentChildInteraction: { type: String },
        semanticRelation: { type: String },
        attribution: { type: String },
        action: { type: String },
        locativeAction: { type: String },
        existence: { type: String },
        nonExistence: { type: String },
        denial: { type: String },
        rejection: { type: String },
        reccurence: { type: String },
        possession: { type: String },
        playSkills: { type: String },
        greetingSkill: { type: String },
        requesting: { type: String },
        turnSkill: { type: String },
        topicInitiation: { type: String },
        topicMaintenance: { type: String },
        topicTermination: { type: String },
        socialSmile: { type: String },
        reciprocalSmile: { type: String },
        jointAttention: { type: String },
        minglingPeers: { type: String },
        temperTantrums: { type: String },
        selfBehaviour: { type: String },
        hyperActivity: { type: String },
        selfHelp: { type: String },
        toiletIndication: { type: String },
        bladderControl: { type: String },
        parentChildInteractionBehaviour: { type: String },
        matching: { type: String },
        association: { type: String },
        sequencing: { type: String },
        categorization: { type: String },
        logicatReasoning: { type: String },
        problemSolving: { type: String },
        memory: { type: String },
        hearing: { type: String },
        vision: { type: String },
        testAdminstered: { type: String },
        impression: { type: String },
        admissionAge: { type: String },
        academicBreakdown: { type: String },
        communicateParticipation: { type: String },
        provisionalDiagnosis: { type: String },
        familyStrength: { type: String },
        familyBarriers: { type: String },
        counselling: { type: String },
        goalsExplained: { type: String },
        recommendation: { type: String },
        overall: { type: String }



    }
);

const stAssessmentModel = mongoose.model('StAssessment',stAssessmentSchema);
module.exports = stAssessmentModel;